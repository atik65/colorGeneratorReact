{"version":3,"sources":["components/SingleColor.jsx","components/Allcolor.jsx","App.js","reportWebVitals.js","index.js"],"names":["SingleColor","color","index","useState","alert","setAlert","useEffect","timeout","setTimeout","clearTimeout","hex","className","style","backgroundColor","onClick","navigator","clipboard","writeText","weight","defaultList","Values","all","Allcolor","setColor","list","setList","error","setError","onSubmit","e","preventDefault","values","type","value","onChange","target","placeholder","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAsCeA,EApCK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC5B,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,GAAS,KACR,KACH,OAAO,WACLI,aAAaF,MAEd,CAACH,IACJ,IAAMM,EAAG,WAAOT,EAAMS,KAOtB,OACE,mCACE,sBACEC,UAAS,iCAA4BT,EAAQ,IAAM,QACnDU,MAAO,CAAEC,gBAAiBH,GAC1BI,QAVU,WACdC,UAAUC,UAAUC,UAAUP,GAC9BL,GAAS,IAKP,UAKE,sBAAKM,UAAU,iBAAf,UACE,6BAAKD,IACL,+BAAKT,EAAMiB,OAAX,UAGDd,EAAQ,wDAAqC,S,gBC7BhDe,EAAc,IAAIC,IAAO,WAAWC,IAAI,GAmE/BC,EAjEE,WACf,MAA0BnB,mBAAS,IAAnC,mBAAOF,EAAP,KAAcsB,EAAd,KACA,EAAwBpB,mBAASgB,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA0BtB,oBAAS,GAAnC,mBAAOuB,EAAP,KAAcC,EAAd,KAiBA,OACE,qCACE,qBAAKhB,UAAU,YAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,YAAf,SACE,mDAEF,qBAAKA,UAAU,gBAAf,SACE,uBAAMiB,SAvBK,SAACC,GACpBA,EAAEC,iBACF,IACEH,GAAS,GACT,IAAMI,EAAS,IAAIX,IAAJ,UAAcnB,IAASoB,IAAI,GAC1CI,EAAQM,GACR,MAAOL,GACPC,GAAS,KAgBH,UACE,sBAAKhB,UAAU,oBAAf,UACE,uBACEqB,KAAK,OACLrB,UAAS,wBAAmBe,EAAQ,QAAU,MAC9CO,MAAOhC,EACPiC,SAlBK,SAACL,GACpBN,EAASM,EAAEM,OAAOF,QAkBJ,mBAAiB,SACjBG,YAAY,YAGd,wBACEJ,KAAK,SACLrB,UAAS,gCAFX,uBAODe,GACC,uBAAOf,UAAU,cAAjB,gDAOV,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,MAAf,SACGa,EAAKa,KAAI,SAACpC,EAAOC,GAChB,OAAO,cAAC,EAAD,CAAyBD,MAAOA,EAAOC,MAAOA,GAA5BA,cCpDtBoC,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.be7be2b1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst SingleColor = ({ color, index }) => {\r\n  const [alert, setAlert] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setAlert(false);\r\n    }, 2000);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [alert]);\r\n  const hex = `#${color.hex}`;\r\n\r\n  const onAlert = () => {\r\n    navigator.clipboard.writeText(hex);\r\n    setAlert(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`col-md-2 col-6 height  ${index > 20 && \"text\"}`}\r\n        style={{ backgroundColor: hex }}\r\n        onClick={onAlert}\r\n      >\r\n        <div className=\"px-4 pb-2 pt-2\">\r\n          <h5>{hex}</h5>\r\n          <h6>{color.weight}%</h6>\r\n        </div>\r\n\r\n        {alert ? <small>Copied to Clipboard</small> : \"\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleColor;\r\n","import React, { useState } from \"react\";\r\nimport SingleColor from \"./SingleColor\";\r\nimport Values from \"values.js\";\r\nconst defaultList = new Values(\"#f55142\").all(5);\r\n\r\nconst Allcolor = () => {\r\n  const [color, setColor] = useState(\"\");\r\n  const [list, setList] = useState(defaultList);\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setError(false);\r\n      const values = new Values(`${color}`).all(5);\r\n      setList(values);\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setColor(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row mt-4\">\r\n          <div className=\"col-md-4 \">\r\n            <h1>Color Generator</h1>\r\n          </div>\r\n          <div className=\"col-md-8 mt-3\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group d-flex\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={`form-control  ${error ? \"error\" : null}`}\r\n                  value={color}\r\n                  onChange={handleChange}\r\n                  aria-describedby=\"helpId\"\r\n                  placeholder=\"#1B65C4\"\r\n                />\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  className={` mx-2 btn btn-outline-success`}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n              {error && (\r\n                <small className=\"text-danger\">Provide Valid Color code</small>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container mt-5\">\r\n        <div className=\"row\">\r\n          {list.map((color, index) => {\r\n            return <SingleColor key={index} color={color} index={index} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Allcolor;\r\n","import \"./App.css\";\nimport Allcolor from \"./components/Allcolor\";\nfunction App() {\n  return (\n    <>\n      <Allcolor />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}